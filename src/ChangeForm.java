import com.intellij.uiDesigner.core.GridConstraints;
import com.intellij.uiDesigner.core.GridLayoutManager;

import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import java.awt.*;

public class ChangeForm extends JDialog {
    private JPanel rootPanel;
    private JTable driversTable;
    private JTable stopsTable;
    private JButton button1;
    private JComboBox comboBox1;

    protected ChangeForm() {
        $$$setupUI$$$();
        setContentPane(rootPanel);
        setModal(true);
        setSize(new Dimension(500, 500));
        setDefaultCloseOperation(DISPOSE_ON_CLOSE);
    }

    public static void main(String[] args) {
        ChangeForm dialog = new ChangeForm();
        //dialog.getContentPane().setPreferredSize(new Dimension(500, 1000));
        dialog.pack();
        dialog.setVisible(true);
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        createUIComponents();
        rootPanel = new JPanel();
        rootPanel.setLayout(new GridLayoutManager(4, 3, new Insets(0, 0, 0, 0), -1, -1));
        final JScrollPane scrollPane1 = new JScrollPane();
        rootPanel.add(scrollPane1, new GridConstraints(0, 0, 4, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_WANT_GROW, null, null, null, 0, false));
        scrollPane1.setBorder(BorderFactory.createTitledBorder(BorderFactory.createLineBorder(new Color(-4473925)), null));
        scrollPane1.setViewportView(driversTable);
        final JScrollPane scrollPane2 = new JScrollPane();
        rootPanel.add(scrollPane2, new GridConstraints(0, 1, 3, 2, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_WANT_GROW, null, null, null, 0, false));
        stopsTable.setAutoCreateRowSorter(false);
        scrollPane2.setViewportView(stopsTable);
        button1 = new JButton();
        button1.setText("Button");
        rootPanel.add(button1, new GridConstraints(3, 2, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        comboBox1 = new JComboBox();
        rootPanel.add(comboBox1, new GridConstraints(3, 1, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return rootPanel;
    }

    private void createUIComponents() {
        // TODO: place custom component creation code here
        var driveModel = new DefaultTableModel(new Object[][]{{"Василий Андреевич"}, {"Андрей Васильевич"}}, new String[]{"Водители"}) {
            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            }
        };
        driversTable = new JTable(driveModel);
        var stopsModel = new DefaultTableModel(new Object[][]{{"ул. Репина"}, {"ул. Васянина"}}, new String[]{"Остановки"}) {
            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            }
        };
        stopsTable = new JTable(stopsModel);
    }
}

