import com.intellij.uiDesigner.core.GridConstraints;
import com.intellij.uiDesigner.core.GridLayoutManager;
import com.intellij.uiDesigner.core.Spacer;

import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.sql.SQLException;
import java.util.regex.Pattern;

public class DriverForm extends JDialog {
    private JPanel rootPanel;
    private JComboBox ClassComboBox;
    private JTextField NameField;
    private JTextField ExpField;
    private JButton ApproveButton;
    private JTextArea ViolationTextArea;
    private Pattern namePattern = Pattern.compile("([a-zA-Zа-яА-Я]+ [a-zA-Zа-яА-Я]+( [a-zA-Zа-яА-Я]+)?)");
    private Pattern expPattern = Pattern.compile("\\d?\\d\\.\\d");
    // in db driver id always > 0
    private int driverID = -1;
    private Driver driver = null;

    DriverForm(Driver driver) {
        setTitle("Досье Водителя");
        $$$setupUI$$$();
        setContentPane(rootPanel);
        setModal(true);
        setSize(500, 700);
        this.driver = driver;
        setDefaultCloseOperation(DISPOSE_ON_CLOSE);
        ApproveButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                try {
                    validateData();
                    Driver newDriver = new Driver(NameField.getText(), Double.parseDouble(ExpField.getText())
                            , ClassComboBox.getSelectedItem().toString());
                    if (!ViolationTextArea.getText().equals("")) {
                        newDriver.setViolations(ViolationTextArea.getText());
                    }
                    if (driver == null)
                        driverID = dbClass.insertDriver(newDriver);
                    else {
                        // need to set up driver id previously
                        dbClass.updateDriver(newDriver, driverID);
                    }
                    setVisible(false);
                    dispose();
                } catch (IllegalDataException | SQLException ex) {
                    JOptionPane.showMessageDialog(null, ex.getMessage());
                }
            }
        });
    }

    void loadData() {
        if (driver != null) {
            NameField.setText(driver.getFIO());
            ClassComboBox.setSelectedItem(driver.getClassification());
            ExpField.setText(Double.toString(driver.getExperience()));
            ViolationTextArea.setText(driver.getViolations());
        }
    }

    private void validateData() throws IllegalDataException {
        if (!Pattern.matches(namePattern.pattern(), NameField.getText()))
            throw new IllegalDataException("Неправильно введено ФИО водителя");
        if (!Pattern.matches(expPattern.pattern(), ExpField.getText()))
            throw new IllegalDataException("Неправильно введен опыт работы");
    }

    public static void main(String[] args) {
        DriverForm dialog = new DriverForm(null);
        //dialog.getContentPane().setPreferredSize(new Dimension(500, 1000));
        dialog.pack();
        dialog.setVisible(true);
    }

    public int getDriverID() {
        return driverID;
    }

    public void setDriverID(int driverID) {
        this.driverID = driverID;
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        createUIComponents();
        rootPanel = new JPanel();
        rootPanel.setLayout(new GridLayoutManager(12, 3, new Insets(0, 0, 0, 0), -1, -1));
        rootPanel.setBorder(BorderFactory.createTitledBorder(""));
        final Spacer spacer1 = new Spacer();
        rootPanel.add(spacer1, new GridConstraints(3, 2, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, 1, null, null, null, 0, false));
        final Spacer spacer2 = new Spacer();
        rootPanel.add(spacer2, new GridConstraints(10, 1, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_VERTICAL, 1, GridConstraints.SIZEPOLICY_WANT_GROW, null, null, null, 0, false));
        final JLabel label1 = new JLabel();
        label1.setText("Фамилия Имя Отчество");
        rootPanel.add(label1, new GridConstraints(2, 1, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final JLabel label2 = new JLabel();
        label2.setText("Стаж водителя (в годах)");
        rootPanel.add(label2, new GridConstraints(4, 1, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final JLabel label3 = new JLabel();
        label3.setText("Класс водителя");
        rootPanel.add(label3, new GridConstraints(6, 1, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        rootPanel.add(ClassComboBox, new GridConstraints(7, 1, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final Spacer spacer3 = new Spacer();
        rootPanel.add(spacer3, new GridConstraints(0, 1, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_VERTICAL, 1, GridConstraints.SIZEPOLICY_FIXED, new Dimension(-1, 10), null, new Dimension(-1, 10), 0, false));
        final Spacer spacer4 = new Spacer();
        rootPanel.add(spacer4, new GridConstraints(1, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_FIXED, 1, new Dimension(10, -1), null, new Dimension(10, -1), 0, false));
        NameField = new JTextField();
        rootPanel.add(NameField, new GridConstraints(3, 1, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(150, -1), null, 0, false));
        ExpField = new JTextField();
        rootPanel.add(ExpField, new GridConstraints(5, 1, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(150, -1), null, 0, false));
        ApproveButton = new JButton();
        ApproveButton.setText("Ok");
        rootPanel.add(ApproveButton, new GridConstraints(11, 1, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        ViolationTextArea = new JTextArea();
        rootPanel.add(ViolationTextArea, new GridConstraints(9, 1, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_WANT_GROW, null, new Dimension(150, 50), null, 0, false));
        final JLabel label4 = new JLabel();
        label4.setText("Нарушения");
        rootPanel.add(label4, new GridConstraints(8, 1, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
    }

    /**
     *
     */
    public JComponent $$$getRootComponent$$$() {
        return rootPanel;
    }

    private void createUIComponents() {

        ClassComboBox = new JComboBox<>(Driver.s_classification);
    }
}
