
import org.jdesktop.swingbinding.JComboBoxBinding;

import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.JTableHeader;
import javax.swing.table.TableColumnModel;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

public class Form1 extends JDialog {
    private JPanel contentPane;
    private JButton addButton;
    private JButton deleteButton;
    private JButton saveButton;
    private JToolBar ToolBar;
    private JButton questionButton;
    private JTable mainTable;
    private JButton routeButon;
    private JButton driverButton;
    private JPanel subPanel;
    private JComboBox comboBox1;
    private JTextField textField1;
    private JScrollPane mainScrollPanel;
    private DefaultTableModel model;
    private String[] header = new String[]{"Водители", "Маршрут", "График"};
    private Object[][] info = new String[][]{{"Vasya", "Pukin", "Улица Александрова - Невский проспект"}};

    private Form1() {
        //Конструктор формы
        $$$setupUI$$$();
        setContentPane(contentPane);
        setModal(true);

        routeButon.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                windowInvocation();
            }
        });
    }

    private void windowInvocation() {
        RouteForm form1 = new RouteForm();
        form1.setVisible(true);
    }

    private void setIcons() {
        /*
          Установка иконок

          */
        buttonConverter(addButton);
        addButton.setIcon(new ImageIcon("icons/play-button.png"));
        addButton.setPressedIcon(new ImageIcon("icons/play-deleteButton.png"));
        buttonConverter(deleteButton);
        deleteButton.setIcon(new ImageIcon("icons/minus.png"));
        deleteButton.setPressedIcon(new ImageIcon("icons/minus (1).png"));
        buttonConverter(saveButton);
        saveButton.setIcon(new ImageIcon("icons/save (1).png"));
        saveButton.setPressedIcon(new ImageIcon("icons/save (2).png"));
        buttonConverter(questionButton);
        questionButton.setIcon(new ImageIcon("icons/question.png"));
        questionButton.setPressedIcon(new ImageIcon("icons/question (1).png"));

    }

    private void buttonConverter(JButton button) {
        /**
         *  От кнопки остается только значок
         */
        button.setBorderPainted(false);
        button.setBorder(null);
        button.setFocusable(false);
        button.setMargin(new Insets(0, 0, 0, 0));
        button.setContentAreaFilled(false);
    }

    public static void main(String[] args) {
        Form1 dialog = new Form1();
        dialog.getContentPane().setPreferredSize(new Dimension(1000, 500));
        dialog.setIcons();
        dialog.pack();
        dialog.setVisible(true);
        System.exit(0);
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        createUIComponents();
        contentPane = new JPanel();
        contentPane.setLayout(new BorderLayout(0, 0));
        contentPane.setBorder(BorderFactory.createTitledBorder(BorderFactory.createLoweredBevelBorder(), null));
        ToolBar = new JToolBar();
        ToolBar.setFloatable(false);
        ToolBar.setMargin(new Insets(5, 5, 5, 5));
        contentPane.add(ToolBar, BorderLayout.NORTH);
        addButton = new JButton();
        addButton.setEnabled(true);
        addButton.setHideActionText(false);
        addButton.setText("");
        addButton.setToolTipText("Добавить информацию");
        ToolBar.add(addButton);
        final JToolBar.Separator toolBar$Separator1 = new JToolBar.Separator();
        ToolBar.add(toolBar$Separator1);
        deleteButton = new JButton();
        deleteButton.setText("");
        deleteButton.setToolTipText("Удалить инфу");
        ToolBar.add(deleteButton);
        final JToolBar.Separator toolBar$Separator2 = new JToolBar.Separator();
        ToolBar.add(toolBar$Separator2);
        saveButton = new JButton();
        saveButton.setText("");
        saveButton.setToolTipText("Сохранить");
        ToolBar.add(saveButton);
        final JToolBar.Separator toolBar$Separator3 = new JToolBar.Separator();
        ToolBar.add(toolBar$Separator3);
        questionButton = new JButton();
        questionButton.setText("");
        questionButton.setToolTipText("Справка");
        ToolBar.add(questionButton);
        final JToolBar.Separator toolBar$Separator4 = new JToolBar.Separator();
        ToolBar.add(toolBar$Separator4);
        final JLabel label1 = new JLabel();
        label1.setText("Поиск по");
        ToolBar.add(label1);
        final JToolBar.Separator toolBar$Separator5 = new JToolBar.Separator();
        ToolBar.add(toolBar$Separator5);
        ToolBar.add(comboBox1);
        final JToolBar.Separator toolBar$Separator6 = new JToolBar.Separator();
        ToolBar.add(toolBar$Separator6);
        textField1 = new JTextField();
        ToolBar.add(textField1);
        subPanel = new JPanel();
        subPanel.setLayout(new BorderLayout(0, 0));
        contentPane.add(subPanel, BorderLayout.SOUTH);
        routeButon = new JButton();
        routeButon.setText("Button");
        subPanel.add(routeButon, BorderLayout.WEST);
        driverButton = new JButton();
        driverButton.setText("Button");
        subPanel.add(driverButton, BorderLayout.EAST);
        mainScrollPanel = new JScrollPane();
        mainScrollPanel.setHorizontalScrollBarPolicy(31);
        contentPane.add(mainScrollPanel, BorderLayout.CENTER);
        mainTable.setShowHorizontalLines(true);
        mainTable.setShowVerticalLines(true);
        mainScrollPanel.setViewportView(mainTable);
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return contentPane;
    }

    private void createUIComponents() {
        // TODO: place custom component creation code here
        model = new DefaultTableModel(info, header);
        mainTable = new JTable(model);
        comboBox1 = new JComboBox(new String[]{"Ключевому слову", "По выражению"});
    }
}
